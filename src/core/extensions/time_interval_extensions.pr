// Generated by Supernova, do not modify
import Foundation

{[ const type = "GenericToken" /]}
{[ let brand = ds.currentBrand() /]}
{[ const tokens = ds.tokensByType(type, brand.id) /]}
{[ const filteredTokens = filterTokenPathForType('motionDuration', tokens) /]}
/// An extension on ``PrismTimeInterval`` that provides convenience accessors for all Prism motion duration tokens.
///
/// Motion duration tokens are used to define the duration of animations and transitions in the application.
public extension PrismTimeInterval {
    {[ for token in filteredTokens ]}
    /// Token value for `{{ variableNameForToken(token) }}` on the currently activated ``PrismTokenSource/theme``.
    static var {{ variableNameForToken(token) }}: PrismTimeInterval {
        return PrismTimeInterval(tokenValue: PrismTokenSource.shared.theme.motionDurationTokenProvider.{{ variableNameForToken(token) }})
    }

    {[/]}
    /// An optional initializer for retrieving the associated ``PrismTimeInterval`` for a given token name.
    ///
    /// The initializer will resolve to a ``PrismTimeInterval`` representing the value for the token, or `nil` if the token name is not found.
    /// - Parameter tokenName: The name of the token to retrieve, following the format of all capital letters separated by underscore (e.g.: SCREAMING_SNAKE_CASE).
    init?(tokenName: String) {
        switch tokenName {
    {[ for token in filteredTokens ]}
        case "{{ backendStringForToken(token) }}": self = .{{ variableNameForToken(token) }}
    {[/]}    
        default: return nil
        }
    }
}
