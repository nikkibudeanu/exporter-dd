// Generated by Supernova, do not modify
import SwiftUI

{[ const type = "Gradient" /]}
{[ let brand = ds.currentBrand() /]}
{[ const tokens = ds.tokensByType(type, brand.id) /]}
{[ const linearGradients = filterTokenPathForType('gradient', tokens) /]}
/// An extension on ``SwiftUI/LinearGradient`` that provides a static variable for each gradient token.
public extension LinearGradient {
    {[ for token in linearGradients ]}
    /// Token value for `{{ variableNameForToken(token) }}` on the currently activated ``PrismTokenSource/theme``.
    static var {{ variableNameForToken(token) }}: LinearGradient {
        return PrismTokenSource.shared.theme.gradientTokenProvider.{{ variableNameForToken(token) }}
    }

    {[/]}
    /// An optional initializer for retrieving the associated ``SwiftUI/LinearGradient`` for a given token name.
    ///
    /// The initializer will resolve to a ``SwiftUI/LinearGradient`` representing the value for the token, or `nil` if the token name is not found.
    /// - Parameter tokenName: The name of the token to retrieve, following the format of all capital letters separated by underscore (e.g.: SCREAMING_SNAKE_CASE).
    init?(tokenName: String) {
        switch tokenName {
    {[ for token in linearGradients ]}
        case "{{ backendStringForToken(token) }}": self = .{{ variableNameForToken(token) }}
    {[/]}    
        default: return nil
        }
    }
}

extension PrismLinearGradientTokenValuePair {
    {[ for token in linearGradients ]}
    static var {{ variableNameForToken(token) }}: PrismLinearGradientTokenValuePair {
        return PrismLinearGradientTokenValuePair(name: "{{ variableNameForToken(token) }}", value: PrismLinearGradientCatalogValue(tokenName: "{{ backendStringForToken(token) }}"))
    }
    {[/]}
}

extension PrismLinearGradientTokenValuePair: CaseIterable {
    /// Allows access to all the Prism gradient tokens as a ``PrismLinearGradientTokenValuePair`` array.
    ///
    /// This functionality is intended for use in the Prism Tokens Catalog UI and not for client development.
    public static var allCases: [PrismLinearGradientTokenValuePair] {
        return [
         {[ for token in linearGradients ]}
            .{{ variableNameForToken(token) }},
         {[/]}
        ]
    }
}
