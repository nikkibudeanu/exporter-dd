// Generated by Supernova, do not modify
import Foundation

{[ const type = "Measure" /]}
{[ let brand = ds.currentBrand() /]}
{[ const tokens = ds.tokensByType(type, brand.id) /]}
{[ const filteredTokens = filterTokenPathForType('space', tokens) /]}
/// An extension on `PrismSpacing` that provides convenience accessors for all Prism spacing tokens.
///
/// Spacing tokens are used to define the amount of space between elements. For example, the amount of space between a button and a label.
public extension PrismSpacing {
    {[ for token in filteredTokens ]}
    /// Token value for `{{ variableNameForToken(token) }}` on the currently activated ``PrismTokenSource/theme``.
    static var {{ variableNameForToken(token) }}: PrismSpacing {
        return PrismSpacing(value: PrismTokenSource.shared.theme.spaceTokenProvider.{{ variableNameForToken(token) }})
    }

    {[/]}

    /// An optional initializer for retrieving the associated ``PrismSpacing`` for a given token name.
    ///
    /// The initializer will resolve to a ``PrismSpacing`` representing the value for the token, or `nil` if the token name is not found.
    /// - Parameter tokenName: The name of the token to retrieve, following the format of all capital letters separated by underscore (e.g.: SCREAMING_SNAKE_CASE).
    init?(tokenName: String) {
        switch tokenName {
    {[ for token in filteredTokens ]}
        case "{{ backendStringForToken(token) }}": self = .{{ variableNameForToken(token) }}
    {[/]}    
        default: return nil
        }
    }
}

extension PrismSpacingTokenValuePair {
    {[ for token in filteredTokens ]}
    static var {{ variableNameForToken(token) }}: PrismSpacingTokenValuePair  {
        return PrismSpacingTokenValuePair(name: "{{ variableNameForToken(token) }}", value: PrismSpacingCatalogValue(tokenName: "{{ backendStringForToken(token) }}"))
    }
    {[/]}
}

extension PrismSpacingTokenValuePair: CaseIterable {
    /**
    Allows access to all the ``PrismSpacing`` tokens as a ``PrismSpacingTokenValuePair`` array. 
    
    This functionality is intended for use in the Prism Tokens Catalog UI and not for client development.
    */
    public static var allCases: [PrismSpacingTokenValuePair] {
        return [
        {[ for token in filteredTokens ]}
            .{{ variableNameForToken(token) }},
        {[/]} 
        ]
    }
}
